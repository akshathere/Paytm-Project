generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String?             @unique
  name              String?
  number            String              @unique
  password          String
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     P2Ptrans[]          @relation(name: "fromUserRelation")
  receivedTransfers P2Ptrans[]          @relation(name: "toUserRelation")
}

model P2Ptrans {
  userId     Int      @id @default(autoincrement())
  toUserId   Int
  fromUserId  Int
  amount     Int
  time       DateTime
  fromuser   User     @relation(name: "fromUserRelation", fields: [fromUserId], references: [id])
  touser     User     @relation(name: "toUserRelation", fields: [toUserId], references: [id])
  from String
  to String
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

enum OnRampStatus {
  success
  failure
  processing
}

enum AuthType {
  Google
  Github
}
